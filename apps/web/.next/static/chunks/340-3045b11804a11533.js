"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[340],{69431:function(e,t,a){a.d(t,{T:function(){return l}});var r=a(69245),o=a(69703),n=a(58642),s=a(42216),i=a(82493),c=a(89619);function l(){let{theme:e,setTheme:t}=(0,i.F)(),[a,l]=o.useState(!1);return(o.useEffect(()=>{l(!0)},[]),a)?(0,r.jsxs)(c.z,{variant:"ghost",size:"sm",onClick:()=>t("dark"===e?"light":"dark"),children:[(0,r.jsx)(n.Z,{className:"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0"}),(0,r.jsx)(s.Z,{className:"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100"}),(0,r.jsx)("span",{className:"sr-only",children:"Toggle theme"})]}):(0,r.jsx)(c.z,{variant:"ghost",size:"sm",children:(0,r.jsx)(n.Z,{className:"h-[1.2rem] w-[1.2rem]"})})}},89619:function(e,t,a){a.d(t,{z:function(){return l}});var r=a(69245),o=a(69703),n=a(97056),s=a(22131),i=a(1917);let c=(0,s.j)("inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",{variants:{variant:{default:"bg-primary text-primary-foreground hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground hover:bg-destructive/90",outline:"border border-input bg-background hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-10 px-4 py-2",sm:"h-9 rounded-md px-3",lg:"h-11 rounded-md px-8",icon:"h-10 w-10"}},defaultVariants:{variant:"default",size:"default"}}),l=o.forwardRef((e,t)=>{let{className:a,variant:o,size:s,asChild:l=!1,...d}=e,w=l?n.g7:"button";return(0,r.jsx)(w,{className:(0,i.cn)(c({variant:o,size:s,className:a})),ref:t,...d})});l.displayName="Button"},26218:function(e,t,a){a.d(t,{Ol:function(){return i},Zb:function(){return s},aY:function(){return l},ll:function(){return c}});var r=a(69245),o=a(69703),n=a(1917);let s=o.forwardRef((e,t)=>{let{className:a,...o}=e;return(0,r.jsx)("div",{ref:t,className:(0,n.cn)("rounded-lg border bg-card text-card-foreground shadow-sm",a),...o})});s.displayName="Card";let i=o.forwardRef((e,t)=>{let{className:a,...o}=e;return(0,r.jsx)("div",{ref:t,className:(0,n.cn)("flex flex-col space-y-1.5 p-6",a),...o})});i.displayName="CardHeader";let c=o.forwardRef((e,t)=>{let{className:a,...o}=e;return(0,r.jsx)("h3",{ref:t,className:(0,n.cn)("text-2xl font-semibold leading-none tracking-tight",a),...o})});c.displayName="CardTitle",o.forwardRef((e,t)=>{let{className:a,...o}=e;return(0,r.jsx)("p",{ref:t,className:(0,n.cn)("text-sm text-muted-foreground",a),...o})}).displayName="CardDescription";let l=o.forwardRef((e,t)=>{let{className:a,...o}=e;return(0,r.jsx)("div",{ref:t,className:(0,n.cn)("p-6 pt-0",a),...o})});l.displayName="CardContent",o.forwardRef((e,t)=>{let{className:a,...o}=e;return(0,r.jsx)("div",{ref:t,className:(0,n.cn)("flex items-center p-6 pt-0",a),...o})}).displayName="CardFooter"},34673:function(e,t,a){a.d(t,{I:function(){return s}});var r=a(69245),o=a(69703),n=a(1917);let s=o.forwardRef((e,t)=>{let{className:a,type:o,...s}=e;return(0,r.jsx)("input",{type:o,className:(0,n.cn)("flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",a),ref:t,...s})});s.displayName="Input"},1917:function(e,t,a){a.d(t,{cn:function(){return n}});var r=a(14388),o=a(17203);function n(){for(var e=arguments.length,t=Array(e),a=0;a<e;a++)t[a]=arguments[a];return(0,o.m6)((0,r.W)(t))}},64439:function(e,t,a){a.d(t,{m:function(){return n}});var r=a(69709);let o="https://demo.qandu.me",n=(0,r.Ue)((e,t)=>({sows:[],activeSow:null,rateCard:[],folders:[],errorMessage:null,isLoading:!1,isSaving:!1,sidebarVisible:!0,chatPanelVisible:!1,chatMode:"plan",contextItems:[],isTyping:!1,fetchSows:async()=>{e({isLoading:!0,errorMessage:null});try{let t=await fetch("".concat(o,"/api/sows"));if(!t.ok)throw Error("Failed to fetch SOWs");let a=await t.json();e({sows:a})}catch(t){throw console.error("Error fetching SOWs:",t),e({errorMessage:"Failed to load SOWs. Please check your connection and try again."}),t}finally{e({isLoading:!1})}},createSow:async t=>{e({errorMessage:null});try{let a=await fetch("".concat(o,"/api/sows"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:t||"Untitled SOW",sowData:{projectTitle:"",clientName:"",projectOverview:"",projectOutcomes:[],scopes:[],budgetNote:""}})});if(!a.ok)throw Error("Failed to create SOW");let r=await a.json();return e(e=>({sows:[{id:r.id,name:r.name,updatedAt:r.updatedAt},...e.sows]})),r}catch(t){throw console.error("Error creating SOW:",t),e({errorMessage:"Could not create a new SOW. Please check your connection and try again."}),t}},selectSow:async a=>{e({isLoading:!0,errorMessage:null});try{let r=await fetch("".concat(o,"/api/sows/").concat(a));if(!r.ok)throw Error("Failed to fetch SOW");let n=await r.json(),s=t().rateCard,i=n.sowData&&n.sowData.scopes?{...n.sowData,scopes:n.sowData.scopes.map(e=>({...e,roles:e.roles.map(e=>{let t=s.find(t=>t.name===e.name),a=t?t.rate:0;return{...e,rate:a}})}))}:n.sowData,c={...n,sowData:i};e({activeSow:c}),setTimeout(()=>t().recalculateAllTotals(),0)}catch(o){console.error("Error selecting SOW:",o);let r=t().sows.find(e=>e.id===a);if(r)e({activeSow:{...r,folderId:null,sowData:{},messages:[],createdAt:r.updatedAt,updatedAt:r.updatedAt}}),setTimeout(()=>t().recalculateAllTotals(),0);else throw e({errorMessage:"Failed to load the SOW. Please check your connection and try again."}),o}finally{e({isLoading:!1})}},renameSow:async(t,a)=>{e({errorMessage:null});try{await fetch("".concat(o,"/api/sows/").concat(t),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:a})}),e(e=>{var r;return{sows:e.sows.map(e=>e.id===t?{...e,name:a,updatedAt:new Date}:e),activeSow:(null===(r=e.activeSow)||void 0===r?void 0:r.id)===t?{...e.activeSow,name:a}:e.activeSow}})}catch(t){throw console.error("Error renaming SOW:",t),e({errorMessage:"Failed to rename SOW. Please check your connection and try again."}),t}},updateActiveSowName:async e=>{let{activeSow:a}=t();a&&await t().renameSow(a.id,e)},updateActiveSowData:async a=>{let{activeSow:r}=t();if(r){e({isSaving:!0,errorMessage:null});try{await fetch("".concat(o,"/api/sows/").concat(r.id),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({sowData:a})});let t={...r,sowData:a};e(e=>({activeSow:t,sows:e.sows.map(e=>e.id===r.id?{...e,updatedAt:new Date}:e)}))}catch(t){throw console.error("Error updating SOW data:",t),e({errorMessage:"Failed to save changes. Please check your connection and try again."}),t}finally{e({isSaving:!1})}}},deleteSow:async t=>{e({errorMessage:null});try{if(!(await fetch("".concat(o,"/api/sows/").concat(t),{method:"DELETE"})).ok)throw Error("Failed to delete SOW");e(e=>{var a;return{sows:e.sows.filter(e=>e.id!==t),activeSow:(null===(a=e.activeSow)||void 0===a?void 0:a.id)===t?null:e.activeSow}})}catch(t){throw console.error("Error deleting SOW:",t),e({errorMessage:"Failed to delete SOW. Please check your connection and try again."}),t}},moveSow:async(a,r)=>{e({errorMessage:null});try{if(!(await fetch("".concat(o,"/api/sows/").concat(a,"/move"),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({folderId:r})})).ok)throw Error("Failed to move SOW");await t().fetchSows(),await t().fetchFolders()}catch(t){throw console.error("Error moving SOW:",t),e({errorMessage:"Failed to move SOW. Please check your connection and try again."}),t}},fetchFolders:async()=>{e({errorMessage:null});try{let t=await fetch("".concat(o,"/api/folders"));if(!t.ok)throw Error("Failed to fetch folders");let a=await t.json();e({folders:a})}catch(t){console.error("Error fetching folders:",t),e({errorMessage:null}),e({folders:[]})}},createFolder:async(a,r)=>{e({errorMessage:null});try{let e=await fetch("".concat(o,"/api/folders"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:a,parentId:r})});if(!e.ok){let t=await e.text();throw console.error("Folder creation failed:",t),Error("Failed to create folder: ".concat(t))}let n=await e.json();return await t().fetchFolders(),n}catch(t){throw console.error("Error creating folder:",t.message),e({errorMessage:"Could not create folder. ".concat(t.message)}),t}},renameFolder:async(a,r)=>{e({errorMessage:null});try{if(!(await fetch("".concat(o,"/api/folders/").concat(a),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:r})})).ok)throw Error("Failed to rename folder");await t().fetchFolders()}catch(t){throw console.error("Error renaming folder:",t),e({errorMessage:"Failed to rename folder. Please check your connection and try again."}),t}},deleteFolder:async a=>{e({errorMessage:null});try{if(!(await fetch("".concat(o,"/api/folders/").concat(a),{method:"DELETE"})).ok)throw Error("Failed to delete folder");await t().fetchFolders()}catch(t){throw console.error("Error deleting folder:",t),e({errorMessage:"Failed to delete folder. Please check your connection and try again."}),t}},sendMessage:async function(a){arguments.length>1&&void 0!==arguments[1]&&arguments[1];let{activeSow:r}=t();if(!r)return;let n="/buildsow"===a.trim().toLowerCase(),s=["/newScope","/addRole","/setBudget"].some(e=>a.trim().startsWith(e))&&!n,i={id:"temp-".concat(Math.random()),role:"user",content:a,sowId:r.id,createdAt:new Date};e(e=>({activeSow:e.activeSow?{...e.activeSow,messages:[...e.activeSow.messages||[],i]}:null})),e({isLoading:!0,errorMessage:null});try{if(n){let a=await fetch("".concat(o,"/api/sows/").concat(r.id,"/generate"),{method:"POST",headers:{"Content-Type":"application/json"}});if(!a.ok){let e=await a.json();throw Error(e.error||"Failed to generate SOW")}let{sowData:n,aiMessage:s,architectsLog:i}=await a.json(),c="Untitled SOW";if((null==n?void 0:n.projectTitle)&&(null==n?void 0:n.clientName)?c="".concat(n.clientName," - ").concat(n.projectTitle):(null==n?void 0:n.projectTitle)?c=n.projectTitle:(null==n?void 0:n.clientName)&&(c="".concat(n.clientName," Project")),"Untitled SOW"!==c)try{await fetch("".concat(o,"/api/sows/").concat(r.id),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:c})})}catch(e){console.error("Failed to update SOW name:",e)}let l={id:"ai-".concat(Date.now()),role:"assistant",content:s||"I've generated a complete SOW based on our conversation.",sowId:r.id,createdAt:new Date};l.architectsLog=i,e(e=>({activeSow:e.activeSow?{...e.activeSow,name:c,messages:[...e.activeSow.messages.filter(e=>!e.id.startsWith("temp-")),l],sowData:n}:null})),setTimeout(()=>{t().recalculateAllTotals(),t().fetchSows()},0)}else if(s){let n=await fetch("".concat(o,"/api/sows/").concat(r.id,"/refine"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({command:a})});if(!n.ok){let e=await n.json();throw Error(e.error||"Failed to execute command")}let{sowData:s}=await n.json();e(e=>({activeSow:e.activeSow?{...e.activeSow,messages:e.activeSow.messages.filter(e=>!e.id.startsWith("temp-")),sowData:s}:null})),setTimeout(()=>t().recalculateAllTotals(),0)}else try{let t=await fetch("".concat(o,"/api/sows/").concat(r.id,"/conversation"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:a})});if(!t.ok){let t={id:"ai-fallback-".concat(Date.now()),role:"assistant",content:"I'm experiencing some technical difficulties with the AI service right now. However, you can still create and edit SOWs manually, and export them to PDF and Excel.",sowId:r.id,createdAt:new Date};e(e=>({activeSow:e.activeSow?{...e.activeSow,messages:[...e.activeSow.messages.filter(e=>!e.id.startsWith("temp-")),t]}:null}));return}let{reply:n}=await t.json();e(e=>({activeSow:e.activeSow?{...e.activeSow,messages:[...e.activeSow.messages.filter(e=>!e.id.startsWith("temp-")),n]}:null}))}catch(a){let t={id:"ai-demo-".concat(Date.now()),role:"assistant",content:"Sorry, I'm having trouble connecting to the AI service. You can still work with your SOWs manually - create, edit, and export to PDF/Excel are all working.",sowId:r.id,createdAt:new Date};e(e=>({activeSow:e.activeSow?{...e.activeSow,messages:[...e.activeSow.messages.filter(e=>!e.id.startsWith("temp-")),t]}:null}))}}catch(a){console.error("Error sending message:",a);let t={id:"demo-safe-".concat(Math.random()),role:"assistant",content:"I'm having technical issues with the AI features right now. The core SOW editor, PDF export, and Excel export are working fine though.",sowId:r.id,createdAt:new Date};e(e=>({activeSow:e.activeSow?{...e.activeSow,messages:[...e.activeSow.messages.filter(e=>!e.id.startsWith("temp-")),t]}:null,errorMessage:null}))}finally{e({isLoading:!1})}},generateSOW:async()=>{await t().sendMessage("/buildsow")},generateShareUrl:()=>{let{activeSow:e}=t();if(!e)return null;let a=window.location.origin;return"".concat(a,"/sow/share/").concat(e.id)},fetchRateCard:async()=>{e({errorMessage:null});try{let t=await fetch("".concat(o,"/api/rate-card"));if(!t.ok)throw Error("Failed to fetch rate card");let a=await t.json();e({rateCard:a})}catch(t){console.error("Error fetching rate card:",t),e({errorMessage:null}),e({rateCard:[]})}},createRateCardItem:async t=>{e({errorMessage:null});try{let a=await fetch("".concat(o,"/api/rate-card"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to create rate card item");let r=await a.json();e(e=>({rateCard:[...e.rateCard,r]}))}catch(t){throw console.error("Error creating rate card item:",t),e({errorMessage:"Failed to create rate card item. Please check your connection and try again."}),t}},updateRateCardItem:async(t,a)=>{e({errorMessage:null});try{let r=await fetch("".concat(o,"/api/rate-card/").concat(t),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)});if(!r.ok)throw Error("Failed to update rate card item");let n=await r.json();e(e=>({rateCard:e.rateCard.map(e=>e.id===t?n:e)}))}catch(t){throw console.error("Error updating rate card item:",t),e({errorMessage:"Failed to update rate card item. Please check your connection and try again."}),t}},deleteRateCardItem:async t=>{e({errorMessage:null});try{if(!(await fetch("".concat(o,"/api/rate-card/").concat(t),{method:"DELETE"})).ok)throw Error("Failed to delete rate card item");e(e=>({rateCard:e.rateCard.filter(e=>e.id!==t)}))}catch(t){throw console.error("Error deleting rate card item:",t),e({errorMessage:"Failed to delete rate card item. Please check your connection and try again."}),t}},recalculateAllTotals:()=>{e(e=>{var t;if(!(null===(t=e.activeSow)||void 0===t?void 0:t.sowData)||"object"!=typeof e.activeSow.sowData)return e;let a=e.activeSow.sowData;if(!a.scopes||!Array.isArray(a.scopes))return e;let r=a.scopes.map(e=>{let t=0,a=e.roles.map(e=>{let a=Number(e.hours)||0,r=Number(e.rate)||0,o=a*r;return t+=o,{...e,total:o,hours:a,rate:r}});return{...e,roles:a,subtotal:t}}),o={...a,scopes:r};return{activeSow:{...e.activeSow,sowData:o}}})},updateRoleHours:(a,r,o)=>{e(e=>{var t;if(!(null===(t=e.activeSow)||void 0===t?void 0:t.sowData))return e;let n=e.activeSow.sowData;if(!n.scopes||!Array.isArray(n.scopes))return e;let s=n.scopes.map((e,t)=>{if(t===a){let t=e.roles.map((e,t)=>t===r?{...e,hours:o}:e);return{...e,roles:t}}return e}),i={...n,scopes:s};return{activeSow:{...e.activeSow,sowData:i}}}),t().recalculateAllTotals()},updateRoleRate:(a,r,o)=>{e(e=>{var t;if(!(null===(t=e.activeSow)||void 0===t?void 0:t.sowData))return e;let n=JSON.parse(JSON.stringify(e.activeSow.sowData));return n.scopes[a].roles[r].rate=o,{activeSow:{...e.activeSow,sowData:n}}}),t().recalculateAllTotals()},updateRole:(a,r,o,n)=>{e(e=>{var t;if(!(null===(t=e.activeSow)||void 0===t?void 0:t.sowData))return e;let s=JSON.parse(JSON.stringify(e.activeSow.sowData));return s.scopes[a].roles[r][o]=n,{activeSow:{...e.activeSow,sowData:s}}}),t().recalculateAllTotals()},toggleSidebar:()=>{e(e=>({sidebarVisible:!e.sidebarVisible}))},toggleChatPanel:()=>{e(e=>({chatPanelVisible:!e.chatPanelVisible}))},setChatMode:t=>{e({chatMode:t})},updateContextItems:t=>{e({contextItems:t})},resetChat:async()=>{let{activeSow:a}=t();if(a)try{await fetch("".concat(o,"/api/sows/").concat(a.id,"/messages"),{method:"DELETE"}),e(e=>({activeSow:e.activeSow?{...e.activeSow,messages:[]}:null}))}catch(e){console.error("Error resetting chat:",e)}},newChat:async()=>{try{let e=await t().createSow();await t().selectSow(e.id)}catch(e){console.error("Error creating new chat:",e)}}}))}}]);